{"version":3,"file":"static/js/76.70ae9b22.chunk.js","mappings":"qIAAA,SAASA,EAAmBC,EAAKC,EAASC,EAAQC,EAAOC,EAAQC,EAAKC,GACpE,IACE,IAAIC,EAAOP,EAAIK,GAAKC,GAChBE,EAAQD,EAAKC,KAInB,CAHE,MAAOC,GAEP,YADAP,EAAOO,EAET,CAEIF,EAAKG,KACPT,EAAQO,GAERG,QAAQV,QAAQO,GAAOI,KAAKT,EAAOC,EAEvC,CAEe,SAASS,EAAkBC,GACxC,OAAO,WACL,IAAIC,EAAOC,KACPC,EAAOC,UACX,OAAO,IAAIP,SAAQ,SAAUV,EAASC,GACpC,IAAIF,EAAMc,EAAGK,MAAMJ,EAAME,GAEzB,SAASd,EAAMK,GACbT,EAAmBC,EAAKC,EAASC,EAAQC,EAAOC,EAAQ,OAAQI,EAClE,CAEA,SAASJ,EAAOgB,GACdrB,EAAmBC,EAAKC,EAASC,EAAQC,EAAOC,EAAQ,QAASgB,EACnE,CAEAjB,OAAMkB,EACR,GACF,CACF,C,sJClCMC,EAAS,mCAEFC,EAAa,6BAAG,oGACJC,MAAM,2DAAD,OACiCF,IAFlC,cACrBG,EADqB,gBAMbA,EAASC,OANI,uCAMIC,SANJ,2CAAH,qDAQbC,EAAa,6BAAG,WAAMC,GAAN,uFACJL,MAAM,qDAAD,OAC2BF,EAD3B,4DACqFO,IAFtF,cACrBJ,EADqB,gBAMbA,EAASC,OANI,uCAMIC,SANJ,2CAAH,sDAQbG,EAAiB,6BAAG,WAAMC,GAAN,uFACRP,MAAM,sCAAD,OACYO,EADZ,oBAC+BT,IAF5B,cACzBG,EADyB,gBAKlBA,EAASC,OALS,mFAAH,sDAOjBM,EAAS,6BAAG,WAAMD,GAAN,uFACAP,MAAM,sCAAD,OACYO,EADZ,4BACuCT,IAF5C,cACjBG,EADiB,gBAITA,EAASC,OAJA,uCAIQO,MAJR,2CAAH,sDAMTC,EAAY,6BAAG,WAAMH,GAAN,uFACHP,MAAM,sCAAD,OACYO,EADZ,4BACuCT,IAFzC,cACpBG,EADoB,gBAIZA,EAASC,OAJG,uCAIKC,SAJL,2CAAH,qD,0GC9BzB,EAA0B,sBAA1B,EAA2D,uB,kBC2C3D,EAtCa,WACX,OAA8BQ,EAAAA,EAAAA,WAAS,GAAvC,eAAOC,EAAP,KAAgBC,EAAhB,KACQN,GAAYO,EAAAA,EAAAA,MAAZP,QACR,GAAwBI,EAAAA,EAAAA,UAAS,IAAjC,eAAOF,EAAP,KAAaM,EAAb,KAcA,OAZAC,EAAAA,EAAAA,YAAU,WAENH,GAAW,IACXL,EAAAA,EAAAA,GAAUD,GACPnB,MAAK,SAAA6B,GACJF,EAAQE,EACT,IACAC,OAAM,SAAAC,GAAC,OAAIC,QAAQC,IAAIF,EAAhB,IACPG,SAAQ,kBAAMT,GAAW,EAAjB,GAGd,GAAE,CAACN,KAEF,2BACGK,IAAW,SAACW,EAAA,EAAD,KACZ,eAAIC,UAAWC,EAAf,SACGhB,EAAKiB,KAAI,gBAAGC,EAAH,EAAGA,GAAIC,EAAP,EAAOA,aAAcC,EAArB,EAAqBA,KAAMC,EAA3B,EAA2BA,UAA3B,OACR,gBAAIN,UAAWC,EAAf,WACE,gBACEM,MAAM,QACNC,IACEJ,GAAY,yCAAsCA,GAEpDK,IAAKJ,KAEP,uBAAIA,KACJ,yBAAG,cAAYC,OATiBH,EAD1B,QAgBjB,C","sources":["../node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js","API_requests/requests.js","webpack://react-homework-template/./src/components/Cast/Cast.module.css?c9ee","components/Cast/Cast.jsx"],"sourcesContent":["function asyncGeneratorStep(gen, resolve, reject, _next, _throw, key, arg) {\n  try {\n    var info = gen[key](arg);\n    var value = info.value;\n  } catch (error) {\n    reject(error);\n    return;\n  }\n\n  if (info.done) {\n    resolve(value);\n  } else {\n    Promise.resolve(value).then(_next, _throw);\n  }\n}\n\nexport default function _asyncToGenerator(fn) {\n  return function () {\n    var self = this,\n        args = arguments;\n    return new Promise(function (resolve, reject) {\n      var gen = fn.apply(self, args);\n\n      function _next(value) {\n        asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"next\", value);\n      }\n\n      function _throw(err) {\n        asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"throw\", err);\n      }\n\n      _next(undefined);\n    });\n  };\n}","const APIkey = '066dd3f638d42b734e86b50ba07e683c';\n\nexport const fetchTrending = async () => {\n  const response = await fetch(\n    `https://api.themoviedb.org/3/trending/movie/day?api_key=${APIkey}`\n  );\n  //const data = await response.json();\n  // return data.results;\n  return (await response.json()).results;\n};\nexport const fetchSpecific = async query => {\n  const response = await fetch(\n    `https://api.themoviedb.org/3/search/movie?api_key=${APIkey}&language=en-US&page=1&include_adult=false&query=${query}`\n  );\n  //   const data = await response.json();\n  //   return data.results;\n  return (await response.json()).results;\n};\nexport const fetchMovieDetails = async movieId => {\n  const response = await fetch(\n    `https://api.themoviedb.org/3/movie/${movieId}?api_key=${APIkey}`\n  );\n\n  return await response.json();\n};\nexport const fetchCast = async movieId => {\n  const response = await fetch(\n    `https://api.themoviedb.org/3/movie/${movieId}/credits?api_key=${APIkey}`\n  );\n  return (await response.json()).cast;\n};\nexport const fetchReviews = async movieId => {\n  const response = await fetch(\n    `https://api.themoviedb.org/3/movie/${movieId}/reviews?api_key=${APIkey}`\n  );\n  return (await response.json()).results;\n};\n","// extracted by mini-css-extract-plugin\nexport default {\"castBox\":\"Cast_castBox__KVoEk\",\"castList\":\"Cast_castList__ARoWn\"};","import { useEffect, useState } from 'react';\nimport { fetchCast } from 'API_requests/requests';\nimport { Loader } from 'components/Loader/Loader';\nimport css from './Cast.module.css';\nimport { useParams } from 'react-router-dom';\n\nconst Cast = () => {\n  const [loading, setLoading] = useState(false);\n  const { movieId } = useParams();\n  const [cast, setCast] = useState([]);\n\n  useEffect(() => {\n    const fetchActors = () => {\n      setLoading(true);\n      fetchCast(movieId)\n        .then(actors => {\n          setCast(actors);\n        })\n        .catch(e => console.log(e))\n        .finally(() => setLoading(false));\n    };\n    fetchActors();\n  }, [movieId]);\n  return (\n    <div>\n      {loading && <Loader />}\n      <ul className={css.castBox}>\n        {cast.map(({ id, profile_path, name, character }) => (\n          <li className={css.castList} key={id}>\n            <img\n              width=\"200px\"\n              src={\n                profile_path && `https://image.tmdb.org/t/p/w500${profile_path}`\n              }\n              alt={name}\n            />\n            <p>{name}</p>\n            <p>Character: {character}</p>\n          </li>\n        ))}\n      </ul>\n    </div>\n  );\n};\nexport default Cast;\n"],"names":["asyncGeneratorStep","gen","resolve","reject","_next","_throw","key","arg","info","value","error","done","Promise","then","_asyncToGenerator","fn","self","this","args","arguments","apply","err","undefined","APIkey","fetchTrending","fetch","response","json","results","fetchSpecific","query","fetchMovieDetails","movieId","fetchCast","cast","fetchReviews","useState","loading","setLoading","useParams","setCast","useEffect","actors","catch","e","console","log","finally","Loader","className","css","map","id","profile_path","name","character","width","src","alt"],"sourceRoot":""}