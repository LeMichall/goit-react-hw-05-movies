{"version":3,"file":"static/js/76.26fbcac8.chunk.js","mappings":"6SAGAA,EAAAA,EAAAA,SAAAA,QAAyB,gCACzBA,EAAAA,EAAAA,SAAAA,OAAwB,CACtBC,SAAU,OACVC,QAJa,oCAOR,IAAMC,EAAa,mCAAG,oGACJH,EAAAA,EAAAA,IAAA,sBADI,cACrBI,EADqB,yBAGpBA,EAASC,KAAKC,SAHM,2CAAH,qDAKbC,EAAa,mCAAG,WAAMC,GAAN,uFACJR,EAAAA,EAAAA,IAAA,wDAC4BQ,IAFxB,cACrBJ,EADqB,yBAIpBA,EAASC,KAAKC,SAJM,2CAAH,sDAMbG,EAAiB,mCAAG,WAAMC,GAAN,uFACRV,EAAAA,EAAAA,IAAA,gBAAmBU,IADX,cACzBN,EADyB,yBAExBA,EAASC,MAFe,2CAAH,sDAIjBM,EAAS,mCAAG,WAAMD,GAAN,uFACAV,EAAAA,EAAAA,IAAA,gBAAmBU,EAAnB,aADA,cACjBN,EADiB,yBAEhBA,EAASC,KAAKO,MAFE,2CAAH,sDAITC,EAAY,mCAAG,WAAMH,GAAN,uFACHV,EAAAA,EAAAA,IAAA,gBAAmBU,EAAnB,aADG,cACpBN,EADoB,yBAEnBA,EAASC,KAAKC,SAFK,2CAAH,qD,0GC3BzB,EAA0B,sBAA1B,EAA2D,uB,kBC2C3D,EAtCa,WACX,OAA8BQ,EAAAA,EAAAA,WAAS,GAAvC,eAAOC,EAAP,KAAgBC,EAAhB,KACQN,GAAYO,EAAAA,EAAAA,MAAZP,QACR,GAAwBI,EAAAA,EAAAA,UAAS,IAAjC,eAAOF,EAAP,KAAaM,EAAb,KAcA,OAZAC,EAAAA,EAAAA,YAAU,WAENH,GAAW,IACXL,EAAAA,EAAAA,GAAUD,GACPU,MAAK,SAAAC,GACJH,EAAQG,EACT,IACAC,OAAM,SAAAC,GAAC,OAAIC,QAAQC,IAAIF,EAAhB,IACPG,SAAQ,kBAAMV,GAAW,EAAjB,GAGd,GAAE,CAACN,KAEF,2BACGK,IAAW,SAACY,EAAA,EAAD,KACZ,eAAIC,UAAWC,EAAf,SACGjB,EAAKkB,KAAI,gBAAGC,EAAH,EAAGA,GAAIC,EAAP,EAAOA,aAAcC,EAArB,EAAqBA,KAAMC,EAA3B,EAA2BA,UAA3B,OACR,gBAAIN,UAAWC,EAAf,WACE,gBACEM,MAAM,QACNC,IACEJ,GAAY,yCAAsCA,GAEpDK,IAAKJ,KAEP,uBAAIA,KACJ,yBAAG,cAAYC,OATiBH,EAD1B,QAgBjB,C","sources":["API_requests/requests.js","webpack://react-homework-template/./src/components/Cast/Cast.module.css?c9ee","components/Cast/Cast.jsx"],"sourcesContent":["import axios from 'axios';\n\nconst APIkey = '066dd3f638d42b734e86b50ba07e683c';\naxios.defaults.baseURL = 'https://api.themoviedb.org/3/';\naxios.defaults.params = {\n  language: 'enUS',\n  api_key: APIkey,\n};\n\nexport const fetchTrending = async () => {\n  const response = await axios.get(`trending/movie/day`);\n\n  return response.data.results;\n};\nexport const fetchSpecific = async query => {\n  const response = await axios.get(\n    `search/movie?page=1&include_adult=false&query=${query}`\n  );\n  return response.data.results;\n};\nexport const fetchMovieDetails = async movieId => {\n  const response = await axios.get(`movie/${movieId}`);\n  return response.data;\n};\nexport const fetchCast = async movieId => {\n  const response = await axios.get(`movie/${movieId}/credits`);\n  return response.data.cast;\n};\nexport const fetchReviews = async movieId => {\n  const response = await axios.get(`movie/${movieId}/reviews`);\n  return response.data.results;\n};\n","// extracted by mini-css-extract-plugin\nexport default {\"castBox\":\"Cast_castBox__KVoEk\",\"castList\":\"Cast_castList__ARoWn\"};","import { useEffect, useState } from 'react';\nimport { fetchCast } from 'API_requests/requests';\nimport { Loader } from 'components/Loader/Loader';\nimport css from './Cast.module.css';\nimport { useParams } from 'react-router-dom';\n\nconst Cast = () => {\n  const [loading, setLoading] = useState(false);\n  const { movieId } = useParams();\n  const [cast, setCast] = useState([]);\n\n  useEffect(() => {\n    const fetchActors = () => {\n      setLoading(true);\n      fetchCast(movieId)\n        .then(actors => {\n          setCast(actors);\n        })\n        .catch(e => console.log(e))\n        .finally(() => setLoading(false));\n    };\n    fetchActors();\n  }, [movieId]);\n  return (\n    <div>\n      {loading && <Loader />}\n      <ul className={css.castBox}>\n        {cast.map(({ id, profile_path, name, character }) => (\n          <li className={css.castList} key={id}>\n            <img\n              width=\"200px\"\n              src={\n                profile_path && `https://image.tmdb.org/t/p/w500${profile_path}`\n              }\n              alt={name}\n            />\n            <p>{name}</p>\n            <p>Character: {character}</p>\n          </li>\n        ))}\n      </ul>\n    </div>\n  );\n};\nexport default Cast;\n"],"names":["axios","language","api_key","fetchTrending","response","data","results","fetchSpecific","query","fetchMovieDetails","movieId","fetchCast","cast","fetchReviews","useState","loading","setLoading","useParams","setCast","useEffect","then","actors","catch","e","console","log","finally","Loader","className","css","map","id","profile_path","name","character","width","src","alt"],"sourceRoot":""}